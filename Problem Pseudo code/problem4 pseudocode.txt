--- important notes ---

> 1 stream input
> That is at least three values are taken from the single input sequence
> The third of these is output first
> The second is doubled and then output
> The first value is trebled decremented and output.
> This sequence repeats.


--- pseudocode ---

if(stream input length < 3){
	return nothing¬
}
else{
	while (stream input length > 0) {
		if (stream input length >= 3){
			List Num tempList = reverse (take 3 stream input)¬ //implies taking will take first 3 elements from the list and completely remove them from the stream
			print (tempList[0])¬
			print (tempList[1] * 2)¬
			print (tempList[3] * 3 - 1)¬
		}
		else if (stream input length == 2){
			List Num tempList = reverse (take 2 stream input)¬
			print (tempList[0] * 2)¬
			print (tempList[1] * 3 - 1)¬
		}
		else{
			List Num tempList = reverse (head stream input)¬
			print (tempList[0] * 3 - 1)¬
		}
	}
}


> use modulo for the indexed terms? - to wrap around pointer
 

--- boundary cases ---

> stream is not atleast 3 elements long
> empty values?
> negative numbers
> numbers over 32 bits